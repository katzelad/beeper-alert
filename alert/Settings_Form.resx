<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        f8ZKEafHDv59AAAAAElFTkSuQmCC
</value>
  </data>
</root>